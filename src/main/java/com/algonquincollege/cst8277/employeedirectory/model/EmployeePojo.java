/***************************************************************************f******************u************zz*******y**

 * File: EmployeePojo.java
 * Course materials (20W) CST 8277
 *
 * @author (original) Mike Norman
 * @author Harsh Patel 040919280
 */
package com.algonquincollege.cst8277.employeedirectory.model;

import static
com.algonquincollege.cst8277.employeedirectory.model.EmployeePojo.ALL_EMPLOYEES_QUERY_NAME;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.faces.view.ViewScoped;
import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
*
* Description: model EmployeePojo for the employee object
*/
@Entity(name= "Employee")
@Table(name= "employee")
@Access(AccessType.PROPERTY)
@EntityListeners({EmployeePojoListener.class})
@NamedQueries(
    @NamedQuery(name=ALL_EMPLOYEES_QUERY_NAME, query = "SELECT e from Employee e")
)

public class EmployeePojo implements Serializable {
    private static final long serialVersionUID = 1L;
    
    /**
     * Setting the member fields
     */
    public static final String ALL_EMPLOYEES_QUERY_NAME ="allEmployees";

    protected int id;
    protected String firstName;
    protected String lastName;
    protected String email;
    protected String title;
    protected Double salary;
    
    @Version
    @Access(AccessType.FIELD)
    protected int version;
    private boolean b;
    
    private LocalDateTime createdatetime;   
    private LocalDateTime updatedatetime;
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public int getId() {
        return id;
    }
    /**
     * @param id new value for id
     */
    public void setId(int id) {
        this.id = id;
    }
    
    /**
     * @return the value for firstName
     */
    @Column(name ="FNAME")
    public String getFirstName() {
        return firstName;
    }
    /**     
     * @param firstName new value for firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * @return the value for lastName
     */
    @Column(name ="LNAME")
    public String getLastName() {
        return lastName;
    }
    /**
     * @param lastName new value for lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * @return the value for email
     */
    public String getEmail() {
        return email;
    }
    /**
     * @param email new value for email
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * @return the value for title
     */    
    public String getTitle() {
        return title;
    }
    /**
     * @param title new value for title
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * @return the value for salary
     */  
    public Double getSalary() {
        return salary;
    }
    /**
     * @param salary new value for salary
     */
    public void setSalary(Double salary) {
        this.salary = salary;
    }

    // generated by Eclipse

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + id;
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (!(obj instanceof EmployeePojo)) {
            return false;
        }
        EmployeePojo other = (EmployeePojo) obj;
        if (id != other.id) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder
            .append("Employee [id=")
            .append(id)
            .append(", ");
        if (firstName != null) {
            builder
                .append("firstName=")
                .append(firstName)
                .append(", ");
        }
        if (lastName != null) {
            builder
                .append("lastName=")
                .append(lastName)
                .append(", ");
        }
        if (email != null) {
            builder
                .append("email=")
                .append(email)
                .append(", ");
        }
        if (salary != null) {
            builder
                .append("salary=")
                .append(salary)
                .append(", ");
        }
        if (title != null) {
            builder
                .append("title=")
                .append(title);
        }
        builder.append("]");
        return builder.toString();
    }
    public void setEditable(boolean b) {
        this.b=b;
    }

    /**
     * Getting the date and time when the employee added/created
     * @return createdatetime
     */
    @Column(name="CREATED_DATE")
    public LocalDateTime getCreatedDate()
    {
        return createdatetime;
    }

    /**
     * Setting the Date and time
     * @param createdatetime
     */
    public void setCreatedDate(LocalDateTime createdatetime) 
    {
        this.createdatetime = createdatetime;
    }
    
    /**
     * Getting the date and time when the employee updated/edited
     * @return updatedatetime
     */
    @Column(name="UPDATED_DATE")
    public LocalDateTime getUpdatedDate()
    {
        return updatedatetime;
    }
    
    /**
     * Setting the Date and time
     * @param updatedatetime
     */
    public void setUpdatedDate(LocalDateTime updatedatetime) 
    {
        this.updatedatetime = updatedatetime;
    }

}